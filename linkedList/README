Data Structures repository - part of The Odin Project Full Stack program - JS Path
Linked List |  HashMap |  Balanced Binary Search Tree  | Queue

DS 1 - Linked List (LL)
    a. learning goal: implement a Linked list and its basic operations in JS from scratch
    
    b. Learned concepts:
      - Linked list can be build out of factory functions, Classes or Constructors and they are composed of two of these objects: a Node and the Linked List and an iteration logic
      -  I selected factory functions to build mine and did not based it oupon JS Arrays and array built-in methods, but rather an implementation that mimics the non-indexed memory allocation of a linked list.
        I built my iteration logic as follows: 
        - The first node ever appended becomes the head
        - Each subsequent node is assigned as its predecesor's pointer
        - Upon any appending, searching or removing operations, I assign the head to a temporary pointer (current = head) to start the iteration and use a while/for loop to iterate through each node's next (pointer) until the desired index is reached to perform the relevant action.